=begin comment

Microsoft Bot Connector API - v3.0

ï»¿The Bot Connector REST API allows your bot to send and receive messages to channels configured in the  [Bot Framework Developer Portal](https://dev.botframework.com). The Connector service uses industry-standard REST  and JSON over HTTPS.    Client libraries for this REST API are available. See below for a list.    Many bots will use both the Bot Connector REST API and the associated [Bot State REST API](/en-us/restapi/state). The  Bot State REST API allows a bot to store and retrieve state associated with users and conversations.    Authentication for both the Bot Connector and Bot State REST APIs is accomplished with JWT Bearer tokens, and is  described in detail in the [Connector Authentication](/en-us/restapi/authentication) document.    # Client Libraries for the Bot Connector REST API    * [Bot Builder for C#](/en-us/csharp/builder/sdkreference/)  * [Bot Builder for Node.js](/en-us/node/builder/overview/)  * Generate your own from the [Connector API Swagger file](https://raw.githubusercontent.com/Microsoft/BotBuilder/master/CSharp/Library/Microsoft.Bot.Connector/Swagger/ConnectorAPI.json)    Â© 2016 Microsoft

OpenAPI spec version: v3
Contact: botframework@microsoft.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end comment

=cut

#
# NOTE: This class is auto generated by Swagger Codegen
# Please update the test cases below to test the API endpoints.
# Ref: https://github.com/swagger-api/swagger-codegen
#
use Test::More tests => 2; #TODO update number of test cases
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('MS::BotBuilder::ConversationsApi');

my $api = MS::BotBuilder::ConversationsApi->new();
isa_ok($api, 'MS::BotBuilder::ConversationsApi');

#
# conversations_create_conversation test
#
{
    my $parameters = undef; # replace NULL with a proper value
    my $result = $api->conversations_create_conversation(parameters => $parameters);
}

#
# conversations_delete_activity test
#
{
    my $conversation_id = undef; # replace NULL with a proper value
    my $activity_id = undef; # replace NULL with a proper value
    my $result = $api->conversations_delete_activity(conversation_id => $conversation_id, activity_id => $activity_id);
}

#
# conversations_get_activity_members test
#
{
    my $conversation_id = undef; # replace NULL with a proper value
    my $activity_id = undef; # replace NULL with a proper value
    my $result = $api->conversations_get_activity_members(conversation_id => $conversation_id, activity_id => $activity_id);
}

#
# conversations_get_conversation_members test
#
{
    my $conversation_id = undef; # replace NULL with a proper value
    my $result = $api->conversations_get_conversation_members(conversation_id => $conversation_id);
}

#
# conversations_reply_to_activity test
#
{
    my $conversation_id = undef; # replace NULL with a proper value
    my $activity_id = undef; # replace NULL with a proper value
    my $activity = undef; # replace NULL with a proper value
    my $result = $api->conversations_reply_to_activity(conversation_id => $conversation_id, activity_id => $activity_id, activity => $activity);
}

#
# conversations_send_to_conversation test
#
{
    my $activity = undef; # replace NULL with a proper value
    my $conversation_id = undef; # replace NULL with a proper value
    my $result = $api->conversations_send_to_conversation(activity => $activity, conversation_id => $conversation_id);
}

#
# conversations_update_activity test
#
{
    my $conversation_id = undef; # replace NULL with a proper value
    my $activity_id = undef; # replace NULL with a proper value
    my $activity = undef; # replace NULL with a proper value
    my $result = $api->conversations_update_activity(conversation_id => $conversation_id, activity_id => $activity_id, activity => $activity);
}

#
# conversations_upload_attachment test
#
{
    my $conversation_id = undef; # replace NULL with a proper value
    my $attachment_upload = undef; # replace NULL with a proper value
    my $result = $api->conversations_upload_attachment(conversation_id => $conversation_id, attachment_upload => $attachment_upload);
}


1;
